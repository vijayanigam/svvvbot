"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19bMzDC6-leXdWKfcs5KehRBGpt7Y2ZJM
"""

# from google.colab import files
import nltk
import random
import numpy as np
import string
from nltk.stem import WordNetLemmatizer
# from nltk.stem.porter import PorterStemmer
from nltk.corpus import stopwords
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

a = open("static/svvvbot/about.txt", "r", encoding="utf8")
data = a.read()
data.lower()
nltk.download("punkt")
nltk.download("wordnet")
sent = nltk.sent_tokenize(data)
word = nltk.word_tokenize(data)

lem = nltk.stem.WordNetLemmatizer()


def Lemmetizing(tokens):
    # print(lem.lemmatize(token) for token in tokens)
    return [lem.lemmatize(token) for token in tokens if not token in set(stopwords.words('english'))]


remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)


# print(remove_punct_dict)
def LemNormalize(text):
    # print(Lemmetizing(nltk.word_tokenize(text.lower().translate(remove_punct_dict))))
    return Lemmetizing(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))


INPUTS = ("hello", "hi", "greetings", "sup", "what's up", "hey",)
RESPONSES = ["hi", "hiii", "hey", "hello", "Hey! how can i help you?", "hi there", "hello",
             "I am glad! You are talking to me", "greetings", "sup", "what's up"]
endresponse = ["bye", "Bye bye!", "See you later", "Goodbye", "Bbye,Have a nice day", "It was nice seeing you",
               "Bye Take care"]


def greeting(sentence):
    for word in sentence.split():
        if word.lower() in INPUTS:
            return random.choice(RESPONSES)


def ending(sentence):
    return random.choice(endresponse)


def response(user_response):
    robo_response = ''
    TfidfVec = TfidfVectorizer(tokenizer=LemNormalize)
    # print(TfidfVec)
    tfidf = TfidfVec.fit_transform(sent)
    # print(tfidf)
    vals = cosine_similarity(tfidf[-1], tfidf)
    # print(vals)
    idx = vals.argsort()[0][-2]
    print(idx)
    flat = vals.flatten()
    flat.sort()
    # print(flat)
    req_tfidf = flat[-2]
    if (req_tfidf == 0):
        robo_response = robo_response + "I am sorry!I don't understand you"
        return robo_response
    else:
        robo_response = robo_response + sent[idx]
        return robo_response


flag = True
#print("BOT: My name is Bot. I am your personel assistant. If you want to exit, type Bye!")


def input_fun(user_response):
    while (flag == True):
        punctuations = '''!()-[]{};:'"\,<>./?@#$%^&*_~0123456789'''
        no_punct = ""
        for char in user_response:
            if char not in punctuations:
                no_punct = no_punct + char
        user_response = no_punct
        user_response = user_response.lower()
        user = user_response.split()
        if (user_response != 'bye' or "bye" not in user):
            if (user_response == 'thanks' or "thanks" in user or "thankyou" in user or user_response == 'thank you'):
                flag = False
                print("BOT: " + ending(user_response))
            elif (user_response == "how are you"):
                print("BOT: I am fine! How may I help you?")
            elif (user_response == "how you doing" or user_response == "how do you do"):
                print("BOT: I am doing great.How may I help you?")

            else:
                if (greeting(user_response) != None):
                    print("BOT: " + greeting(user_response))
                else:
                    sent.append(user_response)
                    word = word + nltk.word_tokenize(user_response)
                    final_words = list(set(word))
                    print("BOT: ", end="")
                    print(response(user_response))
                    sent.remove(user_response)
        else:
            flag = False
            print("BOT: Bye!")
